Vagrant.configure("2") do |config|

      # Configure the remote powershell ports
      config.vm.network :forwarded_port, guest: 3389, host: 3389
      config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
      config.vm.guest = :windows
      config.vm.communicator = "winrm"
      config.vm.boot_timeout = 600
      config.vm.graceful_halt_timeout = 600
  
      # The transport used for WinRM communication. 
      # Valid settings include: :negotiate, :ssl, and :plaintext. 
      # The default is :negotiate.
      config.winrm.transport = :plaintext
      # Whether to use Basic Authentication. Defaults to false. 
      # If set to true you should also use the :plaintext transport setting 
      # and the Windows machine must be configured appropriately.
      config.winrm.basic_auth_only 

    config.vm.box = "marvin/win11"
    config.vm.box_url = "file://" + ENV['VAGRANTBOXSHARE'] + "/win11Metadata.json"


    # Configure the remote powershell ports
    config.vm.network :forwarded_port, guest: 3389, host: 3389
    config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true

    # This is the default network from Hyper-V on a non server Windows Version with NAT
    config.vm.network "public_network", bridge: "Default Switch"

    # Disable shared folder, because we do not need it
    config.vm.synced_folder ".", "/vagrant", disabled: true

    # setting the hostname 
    config.vm.hostname = "dev-w11"


    # Configure the hardware parameter
    config.vm.provider "hyperv" do |vm|
      vm.memory = 4096
      vm.maxmemory = 8192
      vm.cpus = 2
    end

    # First upgrade the chocolatey installation 
    config.vm.provision "shell", inline: <<-SHELL1
    choco upgrade chocolatey -y
    SHELL1

    # Install or upgrade git installation 
    config.vm.provision "shell", inline: <<-SHELL2
    choco upgrade git -y
    SHELL2

    # Install Powershell modules  
    config.vm.provision "shell", reboot: false, path: "../../posh-provisioning/Setup-PowerShell.ps1"

    # Install VS Code 
    config.vm.provision "shell", reboot: true, path: "../../posh-provisioning/Setup-VSCode.ps1"

    # Install VS Code Extensions after the installation and reboot
    config.vm.provision "shell", reboot: true, path: "../../posh-provisioning/Setup-VSCodeExtensions.ps1"

    # Install Windows Terminal  
    config.vm.provision "shell", reboot: false, path: "../../posh-provisioning/Setup-WindowsTerminal.ps1"






  end
  